{
title: 'Embedding & Compiling Minified.js',
section: docs,
externalCss: ['../css/doc.css'],
main: `<div>
  <h1>Embedding & Compiling Minified.js</h1>

<h2>Why should I embed Minified.js?</h2>
<p>
The easiest way to use Minfied is the traditional way, just add a script tag on your page and point it to one of the precompiled versions that
you can <a href="/download">download</a>:
<pre>&lt;script type="text/javascript" src="path/to/minified.js">&lt;/script>
</pre>
This is not only the simplest way to use Minified, it's also by far the quickest way to get started. 
</p>

<p>However, if your goal is to optimize your site for download size or page load time, it's often better to combine all your source 
file into a single file. 
Using a single file has several advantages:
<ul>
<li>The browser only needs a single HTTP requests, reducing load time.</li>
<li>If you compile your source code using a compiler/minification tool such as Google Closure, UglifyJS or YUI Compressors, they will work better 
with a single file.</li>
<li>Gzip compression is also more efficient when you have a single large JavaScript file, as opposed to several small ones.</li>
</ul>
</p>

<h2>How can I embed Minified.js?</h2>
<p>Embedding Minified can be as easy as taking the content of a Minified source file and copying it at the top of your source code. 
Usually this is not practical though. Unless only have a few lines of code and can live with scrolling down to edit your own code,
you need to set up a small build system that combines several source files into a single result file. On the command line, a
<code>cat</code> command should be sufficient for that. When you use a compiler like Google Closure or UglifyJS, they are usually 
already capable of combining files.</p>

<h2>How can I compile Minified.js with Closure?</h2>
<p>Most compilers / minification tools will work just fine with Minified.js, but there is one exception: 
the Google Closure Compiler with Advanced Optimization. While Closure's Simple Optimization does not cause any problem,  
the Advanced Optimization options require a lot of annotations to work correctly for a library. The compilation process removes 
the annotations and thus, if you want to embed Minified and use Advanced Optimizations, you must use the plain source code version of Minified.
</p>

<h2>How can I compile Minified.js with UglifyJS / YUI Compressor / Closure Simple Optimization?</h2>
<p>You can embed and compile both the plain source versions and the pre-compiled release of Minified. 
However, unless you are using Google Closure, I recommend using the pre-compiled version, as the other tools can't reduce the size as 
much as Closure's Advanced Optimization. Compiling twice does not hurt as long as you don't use Closure Advanced Optimization twice. 
In fact, the offical Minifed releases are also compiled twice.
</p>

<h2>How are Minified's releases compiled?</h2>
<p>The compiled versions of Minified.js are first compiled with the Google Closure Compiler with Advanced Optimization, and the result
is then compiled again using UglifyJS. In the first step, the size is reduced from over 100kb to about 9kb. In the second step, UglifyJS removes
about 80 bytes. After GZip'ing the difference is only about 30 bytes.<br/>
If you are using the <a href="/builder/">builder tool</a>, only Google Closure is used. That's why the builder creates slightly larger files.

</p>

<p>back to <a href="/docs">Minified documentation</a>.</p>

  </div>`
}
